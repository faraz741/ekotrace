import { Component, h, Element, Prop, Host, State } from '@stencil/core';
import { v4 as uuidv4 } from 'uuid';
export class Checkbox {
  constructor() {
    this.class = '';
    this.disabled = false;
    this.block = false;
    this.switchable = false;
    this.checked = false;
    this.value = '';
  }
  handleOnChange(e) {
    this.checked = e.target.checked;
    e.preventDefault();
    e.stopPropagation();
    this.el.dispatchEvent(new e.constructor(e.type, e));
  }
  componentWillLoad() {
    this.ID = uuidv4();
  }
  render() {
    return (h(Host, { style: { width: this.block ? '100%' : 'inherit', display: 'block' } },
      h("div", { class: {
          'form-check': true,
          'form-switch': this.switchable,
        } },
        h("input", { class: "form-check-input", type: "checkbox", id: this.ID, disabled: this.disabled, checked: this.checked, onChange: this.handleOnChange.bind(this), value: this.value }),
        h("label", { class: "form-check-label", htmlFor: this.ID },
          h("slot", null)))));
  }
  static get is() { return "pf-checkbox"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "bs4": ["bs4.scss"],
    "bs5": ["bs5.scss"]
  }; }
  static get styleUrls() { return {
    "bs4": ["bs4.css"],
    "bs5": ["bs5.css"]
  }; }
  static get properties() { return {
    "class": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "class",
      "reflect": false,
      "defaultValue": "''"
    },
    "mode": {
      "type": "string",
      "mutable": true,
      "complexType": {
        "original": "MODE",
        "resolved": "\"bs4\" | \"bs5\"",
        "references": {
          "MODE": {
            "location": "import",
            "path": "../../utils/types"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "mode",
      "reflect": true
    },
    "disabled": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "disabled",
      "reflect": true,
      "defaultValue": "false"
    },
    "block": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "block",
      "reflect": true,
      "defaultValue": "false"
    },
    "switchable": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "switchable",
      "reflect": true,
      "defaultValue": "false"
    },
    "checked": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checked",
      "reflect": true,
      "defaultValue": "false"
    },
    "value": {
      "type": "string",
      "mutable": true,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "value",
      "reflect": true,
      "defaultValue": "''"
    }
  }; }
  static get states() { return {
    "ID": {}
  }; }
  static get elementRef() { return "el"; }
}
