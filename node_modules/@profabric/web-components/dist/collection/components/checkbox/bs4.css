.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.form-control {
  display: block;
  width: 100%;
  height: calc(1.5em + 0.75rem + 2px);
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #495057;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-control {
    transition: none;
  }
}
.form-control::-ms-expand {
  background-color: transparent;
  border: 0;
}
.form-control:focus {
  color: #495057;
  background-color: #fff;
  border-color: #80bdff;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}
.form-control::placeholder {
  color: #6c757d;
  opacity: 1;
}
.form-control:disabled, .form-control[readonly] {
  background-color: #e9ecef;
  opacity: 1;
}

input[type=date].form-control,
input[type=time].form-control,
input[type=datetime-local].form-control,
input[type=month].form-control {
  appearance: none;
}

select.form-control:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #495057;
}
select.form-control:focus::-ms-value {
  color: #495057;
  background-color: #fff;
}

.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}

.col-form-label {
  padding-top: calc(0.375rem + 1px);
  padding-bottom: calc(0.375rem + 1px);
  margin-bottom: 0;
  font-size: inherit;
  line-height: 1.5;
}

.col-form-label-lg {
  padding-top: calc(0.5rem + 1px);
  padding-bottom: calc(0.5rem + 1px);
  font-size: 1.25rem;
  line-height: 1.5;
}

.col-form-label-sm {
  padding-top: calc(0.25rem + 1px);
  padding-bottom: calc(0.25rem + 1px);
  font-size: 0.875rem;
  line-height: 1.5;
}

.form-control-plaintext {
  display: block;
  width: 100%;
  padding: 0.375rem 0;
  margin-bottom: 0;
  font-size: 1rem;
  line-height: 1.5;
  color: #212529;
  background-color: transparent;
  border: solid transparent;
  border-width: 1px 0;
}
.form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {
  padding-right: 0;
  padding-left: 0;
}

.form-control-sm {
  height: calc(1.5em + 0.5rem + 2px);
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  line-height: 1.5;
  border-radius: 0.2rem;
}

.form-control-lg {
  height: calc(1.5em + 1rem + 2px);
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  line-height: 1.5;
  border-radius: 0.3rem;
}

select.form-control[size], select.form-control[multiple] {
  height: auto;
}

textarea.form-control {
  height: auto;
}

.form-group {
  margin-bottom: 1rem;
}

.form-text {
  display: block;
  margin-top: 0.25rem;
}

.form-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -5px;
  margin-left: -5px;
}
.form-row > .col,
.form-row > [class*=col-] {
  padding-right: 5px;
  padding-left: 5px;
}

.form-check {
  position: relative;
  display: block;
  padding-left: 1.25rem;
}

.form-check-input {
  position: absolute;
  margin-top: 0.3rem;
  margin-left: -1.25rem;
}
.form-check-input[disabled] ~ .form-check-label, .form-check-input:disabled ~ .form-check-label {
  color: #6c757d;
}

.form-check-label {
  margin-bottom: 0;
}

.form-check-inline {
  display: inline-flex;
  align-items: center;
  padding-left: 0;
  margin-right: 0.75rem;
}
.form-check-inline .form-check-input {
  position: static;
  margin-top: 0;
  margin-right: 0.3125rem;
  margin-left: 0;
}

.valid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 80%;
  color: #28a745;
}

.valid-tooltip {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: 0.25rem 0.5rem;
  margin-top: 0.1rem;
  font-size: 0.875rem;
  line-height: 1.5;
  color: #fff;
  background-color: rgba(40, 167, 69, 0.9);
  border-radius: 0.25rem;
}
.form-row > .col > .valid-tooltip, .form-row > [class*=col-] > .valid-tooltip {
  left: 5px;
}

.was-validated :valid ~ .valid-feedback,
.was-validated :valid ~ .valid-tooltip,
.is-valid ~ .valid-feedback,
.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .form-control:valid, .form-control.is-valid {
  border-color: #28a745;
  padding-right: calc(1.5em + 0.75rem) !important;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.was-validated .form-control:valid:focus, .form-control.is-valid:focus {
  border-color: #28a745;
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.was-validated select.form-control:valid, select.form-control.is-valid {
  padding-right: 3rem !important;
  background-position: right 1.5rem center;
}

.was-validated textarea.form-control:valid, textarea.form-control.is-valid {
  padding-right: calc(1.5em + 0.75rem);
  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
}

.was-validated .custom-select:valid, .custom-select.is-valid {
  border-color: #28a745;
  padding-right: calc(0.75em + 2.3125rem) !important;
  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center/8px 10px no-repeat, #fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) no-repeat;
}
.was-validated .custom-select:valid:focus, .custom-select.is-valid:focus {
  border-color: #28a745;
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {
  color: #28a745;
}
.was-validated .form-check-input:valid ~ .valid-feedback,
.was-validated .form-check-input:valid ~ .valid-tooltip, .form-check-input.is-valid ~ .valid-feedback,
.form-check-input.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .custom-control-input:valid ~ .custom-control-label, .custom-control-input.is-valid ~ .custom-control-label {
  color: #28a745;
}
.was-validated .custom-control-input:valid ~ .custom-control-label::before, .custom-control-input.is-valid ~ .custom-control-label::before {
  border-color: #28a745;
}
.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before, .custom-control-input.is-valid:checked ~ .custom-control-label::before {
  border-color: #34ce57;
  background-color: #34ce57;
}
.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before, .custom-control-input.is-valid:focus ~ .custom-control-label::before {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}
.was-validated .custom-control-input:valid:focus:not(:checked) ~ .custom-control-label::before, .custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label::before {
  border-color: #28a745;
}

.was-validated .custom-file-input:valid ~ .custom-file-label, .custom-file-input.is-valid ~ .custom-file-label {
  border-color: #28a745;
}
.was-validated .custom-file-input:valid:focus ~ .custom-file-label, .custom-file-input.is-valid:focus ~ .custom-file-label {
  border-color: #28a745;
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.invalid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 80%;
  color: #dc3545;
}

.invalid-tooltip {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: 0.25rem 0.5rem;
  margin-top: 0.1rem;
  font-size: 0.875rem;
  line-height: 1.5;
  color: #fff;
  background-color: rgba(220, 53, 69, 0.9);
  border-radius: 0.25rem;
}
.form-row > .col > .invalid-tooltip, .form-row > [class*=col-] > .invalid-tooltip {
  left: 5px;
}

.was-validated :invalid ~ .invalid-feedback,
.was-validated :invalid ~ .invalid-tooltip,
.is-invalid ~ .invalid-feedback,
.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .form-control:invalid, .form-control.is-invalid {
  border-color: #dc3545;
  padding-right: calc(1.5em + 0.75rem) !important;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus {
  border-color: #dc3545;
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

.was-validated select.form-control:invalid, select.form-control.is-invalid {
  padding-right: 3rem !important;
  background-position: right 1.5rem center;
}

.was-validated textarea.form-control:invalid, textarea.form-control.is-invalid {
  padding-right: calc(1.5em + 0.75rem);
  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
}

.was-validated .custom-select:invalid, .custom-select.is-invalid {
  border-color: #dc3545;
  padding-right: calc(0.75em + 2.3125rem) !important;
  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center/8px 10px no-repeat, #fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e") center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) no-repeat;
}
.was-validated .custom-select:invalid:focus, .custom-select.is-invalid:focus {
  border-color: #dc3545;
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {
  color: #dc3545;
}
.was-validated .form-check-input:invalid ~ .invalid-feedback,
.was-validated .form-check-input:invalid ~ .invalid-tooltip, .form-check-input.is-invalid ~ .invalid-feedback,
.form-check-input.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .custom-control-input:invalid ~ .custom-control-label, .custom-control-input.is-invalid ~ .custom-control-label {
  color: #dc3545;
}
.was-validated .custom-control-input:invalid ~ .custom-control-label::before, .custom-control-input.is-invalid ~ .custom-control-label::before {
  border-color: #dc3545;
}
.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before, .custom-control-input.is-invalid:checked ~ .custom-control-label::before {
  border-color: #e4606d;
  background-color: #e4606d;
}
.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before, .custom-control-input.is-invalid:focus ~ .custom-control-label::before {
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}
.was-validated .custom-control-input:invalid:focus:not(:checked) ~ .custom-control-label::before, .custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-label::before {
  border-color: #dc3545;
}

.was-validated .custom-file-input:invalid ~ .custom-file-label, .custom-file-input.is-invalid ~ .custom-file-label {
  border-color: #dc3545;
}
.was-validated .custom-file-input:invalid:focus ~ .custom-file-label, .custom-file-input.is-invalid:focus ~ .custom-file-label {
  border-color: #dc3545;
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}
.form-inline .form-check {
  width: 100%;
}
@media (min-width: 576px) {
  .form-inline label {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0;
  }
  .form-inline .form-group {
    display: flex;
    flex: 0 0 auto;
    flex-flow: row wrap;
    align-items: center;
    margin-bottom: 0;
  }
  .form-inline .form-control {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  .form-inline .form-control-plaintext {
    display: inline-block;
  }
  .form-inline .input-group,
.form-inline .custom-select {
    width: auto;
  }
  .form-inline .form-check {
    display: flex;
    align-items: center;
    justify-content: center;
    width: auto;
    padding-left: 0;
  }
  .form-inline .form-check-input {
    position: relative;
    flex-shrink: 0;
    margin-top: 0;
    margin-right: 0.25rem;
    margin-left: 0;
  }
  .form-inline .custom-control {
    align-items: center;
    justify-content: center;
  }
  .form-inline .custom-control-label {
    margin-bottom: 0;
  }
}

.pf-common {
  align-content: var(--pf-align-content, initial);
  align-items: var(--pf-align-items, initial);
  align-self: var(--pf-align-self, initial);
  all: var(--pf-all, initial);
  animation: var(--pf-animation, initial);
  animation-delay: var(--pf-animation-delay, initial);
  animation-direction: var(--pf-animation-direction, initial);
  animation-duration: var(--pf-animation-duration, initial);
  animation-fill-mode: var(--pf-animation-fill-mode, initial);
  animation-iteration-count: var(--pf-animation-iteration-count, initial);
  animation-name: var(--pf-animation-name, initial);
  animation-play-state: var(--pf-animation-play-state, initial);
  animation-timing-function: var(--pf-animation-timing-function, initial);
  backface-visibility: var(--pf-backface-visibility, initial);
  background: var(--pf-background, initial);
  background-attachment: var(--pf-background-attachment, initial);
  background-blend-mode: var(--pf-background-blend-mode, initial);
  background-clip: var(--pf-background-clip, initial);
  background-color: var(--pf-background-color, initial);
  background-image: var(--pf-background-image, initial);
  background-origin: var(--pf-background-origin, initial);
  background-position: var(--pf-background-position, initial);
  background-repeat: var(--pf-background-repeat, initial);
  background-size: var(--pf-background-size, initial);
  border: var(--pf-border, initial);
  border-bottom: var(--pf-border-bottom, initial);
  border-bottom-color: var(--pf-border-bottom-color, initial);
  border-bottom-left-radius: var(--pf-border-bottom-left-radius, initial);
  border-bottom-right-radius: var(--pf-border-bottom-right-radius, initial);
  border-bottom-style: var(--pf-border-bottom-style, initial);
  border-bottom-width: var(--pf-border-bottom-width, initial);
  border-collapse: var(--pf-border-collapse, initial);
  border-color: var(--pf-border-color, initial);
  border-image: var(--pf-border-image, initial);
  border-image-outset: var(--pf-border-image-outset, initial);
  border-image-repeat: var(--pf-border-image-repeat, initial);
  border-image-slice: var(--pf-border-image-slice, initial);
  border-image-source: var(--pf-border-image-source, initial);
  border-image-width: var(--pf-border-image-width, initial);
  border-left: var(--pf-border-left, initial);
  border-left-color: var(--pf-border-left-color, initial);
  border-left-style: var(--pf-border-left-style, initial);
  border-left-width: var(--pf-border-left-width, initial);
  border-radius: var(--pf-border-radius, initial);
  border-right: var(--pf-border-right, initial);
  border-right-color: var(--pf-border-right-color, initial);
  border-right-style: var(--pf-border-right-style, initial);
  border-right-width: var(--pf-border-right-width, initial);
  border-spacing: var(--pf-border-spacing, initial);
  border-style: var(--pf-border-style, initial);
  border-top: var(--pf-border-top, initial);
  border-top-color: var(--pf-border-top-color, initial);
  border-top-left-radius: var(--pf-border-top-left-radius, initial);
  border-top-right-radius: var(--pf-border-top-right-radius, initial);
  border-top-style: var(--pf-border-top-style, initial);
  border-top-width: var(--pf-border-top-width, initial);
  border-width: var(--pf-border-width, initial);
  bottom: var(--pf-bottom, initial);
  box-decoration-break: var(--pf-box-decoration-break, initial);
  box-shadow: var(--pf-box-shadow, initial);
  box-sizing: var(--pf-box-sizing, initial);
  caption-side: var(--pf-caption-side, initial);
  caret-color: var(--pf-caret-color, initial);
  clear: var(--pf-clear, initial);
  clip: var(--pf-clip, initial);
  color: var(--pf-color, initial);
  column-count: var(--pf-column-count, initial);
  column-fill: var(--pf-column-fill, initial);
  column-gap: var(--pf-column-gap, initial);
  column-rule: var(--pf-column-rule, initial);
  column-rule-color: var(--pf-column-rule-color, initial);
  column-rule-style: var(--pf-column-rule-style, initial);
  column-rule-width: var(--pf-column-rule-width, initial);
  column-span: var(--pf-column-span, initial);
  column-width: var(--pf-column-width, initial);
  columns: var(--pf-columns, initial);
  content: var(--pf-content, initial);
  counter-increment: var(--pf-counter-increment, initial);
  counter-reset: var(--pf-counter-reset, initial);
  cursor: var(--pf-cursor, initial);
  direction: var(--pf-direction, initial);
  display: var(--pf-display, initial);
  empty-cells: var(--pf-empty-cells, initial);
  filter: var(--pf-filter, initial);
  flex: var(--pf-flex, initial);
  flex-basis: var(--pf-flex-basis, initial);
  flex-direction: var(--pf-flex-direction, initial);
  flex-flow: var(--pf-flex-flow, initial);
  flex-grow: var(--pf-flex-grow, initial);
  flex-shrink: var(--pf-flex-shrink, initial);
  flex-wrap: var(--pf-flex-wrap, initial);
  float: var(--pf-float, initial);
  font: var(--pf-font, initial);
  font-family: var(--pf-font-family, initial);
  font-kerning: var(--pf-font-kerning, initial);
  font-size: var(--pf-font-size, initial);
  font-size-adjust: var(--pf-font-size-adjust, initial);
  font-stretch: var(--pf-font-stretch, initial);
  font-style: var(--pf-font-style, initial);
  font-variant: var(--pf-font-variant, initial);
  font-weight: var(--pf-font-weight, initial);
  grid: var(--pf-grid, initial);
  grid-area: var(--pf-grid-area, initial);
  grid-auto-columns: var(--pf-grid-auto-columns, initial);
  grid-auto-flow: var(--pf-grid-auto-flow, initial);
  grid-auto-rows: var(--pf-grid-auto-rows, initial);
  grid-column: var(--pf-grid-column, initial);
  grid-column-end: var(--pf-grid-column-end, initial);
  grid-column-gap: var(--pf-grid-column-gap, initial);
  grid-column-start: var(--pf-grid-column-start, initial);
  grid-gap: var(--pf-grid-gap, initial);
  grid-row: var(--pf-grid-row, initial);
  grid-row-end: var(--pf-grid-row-end, initial);
  grid-row-gap: var(--pf-grid-row-gap, initial);
  grid-row-start: var(--pf-grid-row-start, initial);
  grid-template: var(--pf-grid-template, initial);
  grid-template-areas: var(--pf-grid-template-areas, initial);
  grid-template-columns: var(--pf-grid-template-columns, initial);
  grid-template-rows: var(--pf-grid-template-rows, initial);
  hanging-punctuation: var(--pf-hanging-punctuation, initial);
  height: var(--pf-height, initial);
  hyphens: var(--pf-hyphens, initial);
  isolation: var(--pf-isolation, initial);
  justify-content: var(--pf-justify-content, initial);
  left: var(--pf-left, initial);
  letter-spacing: var(--pf-letter-spacing, initial);
  line-height: var(--pf-line-height, initial);
  list-style: var(--pf-list-style, initial);
  list-style-image: var(--pf-list-style-image, initial);
  list-style-position: var(--pf-list-style-position, initial);
  list-style-type: var(--pf-list-style-type, initial);
  margin: var(--pf-margin, initial);
  margin-bottom: var(--pf-margin-bottom, initial);
  margin-left: var(--pf-margin-left, initial);
  margin-right: var(--pf-margin-right, initial);
  margin-top: var(--pf-margin-top, initial);
  max-height: var(--pf-max-height, initial);
  max-width: var(--pf-max-width, initial);
  min-height: var(--pf-min-height, initial);
  min-width: var(--pf-min-width, initial);
  mix-blend-mode: var(--pf-mix-blend-mode, initial);
  object-fit: var(--pf-object-fit, initial);
  object-position: var(--pf-object-position, initial);
  opacity: var(--pf-opacity, initial);
  order: var(--pf-order, initial);
  outline: var(--pf-outline, initial);
  outline-color: var(--pf-outline-color, initial);
  outline-offset: var(--pf-outline-offset, initial);
  outline-style: var(--pf-outline-style, initial);
  outline-width: var(--pf-outline-width, initial);
  overflow: var(--pf-overflow, initial);
  overflow-x: var(--pf-overflow-x, initial);
  overflow-y: var(--pf-overflow-y, initial);
  padding: var(--pf-padding, initial);
  padding-bottom: var(--pf-padding-bottom, initial);
  padding-left: var(--pf-padding-left, initial);
  padding-right: var(--pf-padding-right, initial);
  padding-top: var(--pf-padding-top, initial);
  page-break-after: var(--pf-page-break-after, initial);
  page-break-before: var(--pf-page-break-before, initial);
  page-break-inside: var(--pf-page-break-inside, initial);
  perspective: var(--pf-perspective, initial);
  perspective-origin: var(--pf-perspective-origin, initial);
  pointer-events: var(--pf-pointer-events, initial);
  position: var(--pf-position, initial);
  quotes: var(--pf-quotes, initial);
  resize: var(--pf-resize, initial);
  right: var(--pf-right, initial);
  scroll-behavior: var(--pf-scroll-behavior, initial);
  tab-size: var(--pf-tab-size, initial);
  table-layout: var(--pf-table-layout, initial);
  text-align: var(--pf-text-align, initial);
  text-align-last: var(--pf-text-align-last, initial);
  text-decoration: var(--pf-text-decoration, initial);
  text-decoration-color: var(--pf-text-decoration-color, initial);
  text-decoration-line: var(--pf-text-decoration-line, initial);
  text-decoration-style: var(--pf-text-decoration-style, initial);
  text-indent: var(--pf-text-indent, initial);
  text-justify: var(--pf-text-justify, initial);
  text-overflow: var(--pf-text-overflow, initial);
  text-shadow: var(--pf-text-shadow, initial);
  text-transform: var(--pf-text-transform, initial);
  top: var(--pf-top, initial);
  transform-style: var(--pf-transform-style, initial);
  transition: var(--pf-transition, initial);
  transition-delay: var(--pf-transition-delay, initial);
  transition-duration: var(--pf-transition-duration, initial);
  transition-property: var(--pf-transition-property, initial);
  transition-timing-function: var(--pf-transition-timing-function, initial);
  unicode-bidi: var(--pf-unicode-bidi, initial);
  user-select: var(--pf-user-select, initial);
  vertical-align: var(--pf-vertical-align, initial);
  visibility: var(--pf-visibility, initial);
  white-space: var(--pf-white-space, initial);
  width: var(--pf-width, initial);
  word-break: var(--pf-word-break, initial);
  word-spacing: var(--pf-word-spacing, initial);
  word-wrap: var(--pf-word-wrap, initial);
  writing-mode: var(--pf-writing-mode, initial);
  z-index: var(--pf-z-index, initial);
}

:host([disabled]) {
  cursor: not-allowed;
}

.form-check {
  display: flex;
  align-items: center;
}

.form-check-input {
  cursor: pointer;
  margin-right: 0.5em;
}